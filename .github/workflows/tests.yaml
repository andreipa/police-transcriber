name: Run Unit Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libx11-dev libxext-dev libxrender-dev libgl1-mesa-dev libegl1 libqt5x11extras5 ffmpeg xvfb libxcb1 libxcb-xfixes0 gdb

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || pip install -r requirements.txt --no-cache-dir

      - name: List directory structure
        run: ls -R

      - name: Debug environment
        run: |
          python --version
          pip list
          pwd
          cat requirements.txt
          ffmpeg -version
          python -c "import av; print('av version:', av.__version__)"
          which xvfb-run
          free -m
          ulimit -c unlimited

      - name: Run unit tests with coverage
        env:
          ACTIONS_STEP_DEBUG: true
          QT_LOGGING_RULES: "qt5ct.debug=false"
          DISPLAY: ":99"
          PYTHONUNBUFFERED: "1"
        run: |
          ulimit -s 65536
          xvfb-run --server-args="-screen 0 1024x768x24" pytest tests --cov=./ --cov-report=json --cov-report=term -v
          mv coverage.json coverage-summary.json
          if [ -f core ]; then ls -l core; gdb python core -batch -ex "bt"; fi

      - name: Generate coverage badge
        uses: jaywcjlove/coverage-badges-cli@main
        with:
          source: coverage-summary.json
          output: coverage/badges.svg
          style: flat
          label: Coverage
          jsonPath: totals.percent_covered

      - name: Deploy badge to GitHub Pages
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./coverage
          publish_branch: gh-pages